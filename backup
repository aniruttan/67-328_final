var request = require('request');
// helper functions
function shuffle(a) {
    var j, x, i;
    for (i = a.length - 1; i > 0; i--) {
        j = Math.floor(Math.random() * (i + 1));
        x = a[i];
        a[i] = a[j];
        a[j] = x;
    }
}

exports.init = function(io) {

	var AvailablePlayers = 0; // keep track of the number of players
	// var AvailablePlayersArray=[]
	// namespace for available players
	// var available= io.of('/available');
 //  	var ingame = io.of('/ingame');
  // When a new connection is initiated players go to the available players namespace
 //  available.on('connection', function (socket) {
 //  		AvailablePlayersArray.push(socket);
 //  		console.log("connected");
	// 	++AvailablePlayers;
	// 	console.log(AvailablePlayers)
		// socket.broadcast.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});
		// socket.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});
	// 	// disconnect player
	// 	// var clients = io.of('/available').clients();
	// 	console.log(AvailablePlayersArray);
	// 	socket.on('disconnect', function () {
	// 		--AvailablePlayers;
	// 		socket.broadcast.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});
	// 	});
	// });

  // when players are ingame they go to the ingame namespace
	io.sockets.on('connection', function (socket) {
    console.log("player connected");
		// SYSTEM DATA
		// ++currentPlayers;
		var correct_answer;
		// ++AvailablePlayers;
		// console.log(socket);
		//MOVING NEW PLAYERS TO THE AVAILABLE PLAYERS ROOM
		// socket.join('available');
		// socket.broadcast.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});
		// socket.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});


		// challenge player event recieved
		// socket.on('send_challenge', function (data) {
		// 	console.log(data.player_2);
		// 	console.log(data.category);
		// 	var player_2 = data.player_2;
		// 	var category = data.category;
		// 	socket.broadcast.emit("challenged_by",{category : category});
		// });

		// send question


    socket.on('in_game',function (data){
      console.log("in in_game")
      var category = data.category;
      var api_string;
      var num_questions=0
      var answers=[]
      // GET question from API
      // any 10 random questions
      if (category=="any"){
        api_string='https://opentdb.com/api.php?amount=10';
      }else{
        // questions for specific category
        api_string = 'https://opentdb.com/api.php?amount=10&category='+category;
      };

      while(i<10){
        request(api_string , function (error, response, data) {
            if (!error && response.statusCode == 200) {
              var jsondata=JSON.parse(data);
                console.log(jsondata.results[0].question);
                var question = jsondata.results[0].question;
                correct_answer = jsondata.results[0].correct_answer;
                var possible_answers = jsondata.results[0].incorrect_answers;
                possible_answers.push(correct_answer);
                console.log(possible_answers);
                shuffle(possible_answers);
                console.log(possible_answers);
                socket.emit('question', { question : question});
                socket.emit('possible_answers', { possible_answers : possible_answers});

                socket.on('send_answer', function (data) {
            			console.log(data.selected_answer);
            			console.log(correct_answer);
            			if(correct_answer==data.selected_answer){
            				socket.emit("single_answer_result",{result : "correct"});
            			}else{
            				socket.emit("single_answer_result",{result : "incorrect"});
            			};
            		});
            }
      }
    )};
    });



		socket.on('send_question',function (data){
      console.log("in send question")
			var category = data.category;
			var api_string;
			// GET question from API
			// any 10 random questions
			if (category=="any"){
				api_string='https://opentdb.com/api.php?amount=10';
			}else{
				// questions for specific category
				api_string = 'https://opentdb.com/api.php?amount=10&category='+category;
			};
			request(api_string , function (error, response, data) {
  				if (!error && response.statusCode == 200) {
  					var jsondata=JSON.parse(data);
        			console.log(jsondata.results[0].question);
        			var question = jsondata.results[0].question;
        			correct_answer = jsondata.results[0].correct_answer;
        			var possible_answers = jsondata.results[0].incorrect_answers;
        			possible_answers.push(correct_answer);
        			console.log(possible_answers);
        			shuffle(possible_answers);
        			console.log(possible_answers);
        			socket.emit('question', { question : question});
        			socket.emit('possible_answers', { possible_answers : possible_answers});

     			}
			});
		});


		// recieve answer
		socket.on('send_answer', function (data) {
			console.log(data.selected_answer);
			console.log(correct_answer);
			if(correct_answer==data.selected_answer){
				socket.emit("single_answer_result",{result : "correct"});
			}else{
				socket.emit("single_answer_result",{result : "incorrect"});
			};
		});


		// disconnect player
		socket.on('disconnect', function () {
			--AvailablePlayers;
			socket.broadcast.emit('AvailablePlayers', { AvailablePlayers: AvailablePlayers});
		});
	});
}
